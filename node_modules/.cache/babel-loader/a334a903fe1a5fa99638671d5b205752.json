{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/HobbyGram-Front/src/components/CommentPost.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentPost = props => {\n  _s();\n\n  const {\n    user,\n    content,\n    createdAt\n  } = props;\n  const dispatch = useDispatch(); // 댓글 id 가져오기\n\n  const comment_id = props._id; // 로그인한 유저 정보 불러오기\n\n  const login_user = useSelector(state => state.user);\n\n  const deleteComment = () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      dispatch(commentActions.deleteCommentDB(comment_id));\n      window.alert(\"삭제되었습니다!\"); // history.go(0); // 현재 페이지 새로고침\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CommentPostWrap, {\n      children: [/*#__PURE__*/_jsxDEV(Nickname, {\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Time, {\n        children: moment(new Date(createdAt)).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), login_user.user.name === user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"5rem\",\n          marginLeft: \"15px\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: deleteComment,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentPost, \"xYIh1Ld7DUa2c/kD2Dqaw1Hy8ko=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CommentPost;\nCommentPost.defaultProps = {\n  user: \"댓글쓴이\",\n  content: \"댓글내용이에요!\",\n  createdAt: \"2021-04-13\"\n};\nconst CommentPostWrap = styled.div`\n  display: flex;\n  justify-content: \"space-between\";\n  margin-bottom: 1rem;\n  border-bottom: 1px solid #dddddd;\n  padding-bottom: 0.8rem;\n  @media all and (max-width: 1024px) {\n    font-size: 1rem;\n  }\n\n  @media all and (max-width: 768px) {\n    font-size: 0.8rem;\n  }\n  @media all and (max-width: 414px) {\n    font-size: 0.6rem;\n  }\n\n  @media all and (max-width: 375px) {\n    font-size: 0.6rem;\n  }\n`;\n_c2 = CommentPostWrap;\nconst Button = styled.button`\n  min-width: 2.6rem;\n  height: 30px;\n  margin: 0px auto;\n  color: gray;\n  border: none;\n  background-color: #ccd6f1;\n  border-radius: 10px;\n  font-weight: 700;\n  font-size: 0.9rem;\n  cursor: pointer;\n  :hover {\n    color: red;\n  }\n  @media all and (max-width: 414px) {\n    min-width: 1rem;\n    width: 2rem;\n    height: 1.8rem;\n    font-size: 0.5rem;\n  }\n  @media all and (max-width: 375px) {\n    min-width: 1rem;\n    width: 2rem;\n    height: 1.8rem;\n    font-size: 0.5rem;\n  }\n`;\n_c3 = Button;\nconst Nickname = styled.div`\n  min-width: 10rem;\n  width: auto;\n  margin-right: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  @media all and (max-width: 1024px) {\n    min-width: 3rem;\n    width: auto;\n  }\n  @media all and (max-width: 768px) {\n    min-width: 3rem;\n    width: auto;\n  }\n\n  @media all and (max-width: 414px) {\n    min-width: 2rem;\n    width: auto;\n  }\n  @media all and (max-width: 375px) {\n    min-width: 2rem;\n    width: auto;\n  }\n`;\n_c4 = Nickname;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n`;\n_c5 = Content;\nconst Time = styled.div`\n  width: 11rem;\n  align-items: center;\n  display: flex;\n  justify-content: flex-end;\n  color: #888686;\n  @media all and (max-width: 1024px) {\n    width: 9rem;\n  }\n\n  @media all and (max-width: 768px) {\n    width: 7rem;\n  }\n\n  @media all and (max-width: 414px) {\n    width: 6rem;\n  }\n  @media all and (max-width: 375px) {\n    width: 6rem;\n  }\n`;\n_c6 = Time;\nexport default CommentPost;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"CommentPost\");\n$RefreshReg$(_c2, \"CommentPostWrap\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"Nickname\");\n$RefreshReg$(_c5, \"Content\");\n$RefreshReg$(_c6, \"Time\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/HobbyGram-Front/src/components/CommentPost.js"],"names":["React","styled","moment","actionCreators","commentActions","useDispatch","useSelector","CommentPost","props","user","content","createdAt","dispatch","comment_id","_id","login_user","state","deleteComment","window","confirm","deleteCommentDB","alert","Date","fromNow","name","display","width","marginLeft","alignItems","defaultProps","CommentPostWrap","div","Button","button","Nickname","Content","Time"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;AACA,SAASC,cAAc,IAAIC,cAA3B,QAAiD,0BAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA+BH,KAArC;AACA,QAAMI,QAAQ,GAAGP,WAAW,EAA5B,CAF6B,CAI7B;;AACA,QAAMQ,UAAU,GAAGL,KAAK,CAACM,GAAzB,CAL6B,CAO7B;;AACA,QAAMC,UAAU,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACP,IAAlB,CAA9B;;AAEA,QAAMQ,aAAa,GAAG,MAAM;AAC1B,QAAIC,MAAM,CAACC,OAAP,CAAe,cAAf,CAAJ,EAAoC;AAClCP,MAAAA,QAAQ,CAACR,cAAc,CAACgB,eAAf,CAA+BP,UAA/B,CAAD,CAAR;AACAK,MAAAA,MAAM,CAACG,KAAP,CAAa,UAAb,EAFkC,CAGlC;AACD,KAJD,MAIO;AACL;AACD;AACF,GARD;;AASA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,eAAD;AAAA,8BACE,QAAC,QAAD;AAAA,kBAAWZ;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA,kBAAUC;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAA,kBAAOR,MAAM,CAAC,IAAIoB,IAAJ,CAASX,SAAT,CAAD,CAAN,CAA4BY,OAA5B;AAAP;AAAA;AAAA;AAAA;AAAA,cAHF,EAMGR,UAAU,CAACN,IAAX,CAAgBe,IAAhB,KAAyBf,IAAzB,gBACC;AACE,QAAA,KAAK,EAAE;AACLgB,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,KAAK,EAAE,MAFF;AAGLC,UAAAA,UAAU,EAAE,MAHP;AAILC,UAAAA,UAAU,EAAE;AAJP,SADT;AAAA,+BAQE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEX,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,cADD,gBAYC,qCAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA5CD;;GAAMV,W;UAEaF,W,EAMEC,W;;;KARfC,W;AA8CNA,WAAW,CAACsB,YAAZ,GAA2B;AACzBpB,EAAAA,IAAI,EAAE,MADmB;AAEzBC,EAAAA,OAAO,EAAE,UAFgB;AAGzBC,EAAAA,SAAS,EAAE;AAHc,CAA3B;AAMA,MAAMmB,eAAe,GAAG7B,MAAM,CAAC8B,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;MAAMD,e;AAsBN,MAAME,MAAM,GAAG/B,MAAM,CAACgC,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;MAAMD,M;AA4BN,MAAME,QAAQ,GAAGjC,MAAM,CAAC8B,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBA;MAAMG,Q;AA2BN,MAAMC,OAAO,GAAGlC,MAAM,CAAC8B,GAAI;AAC3B;AACA;AACA;AACA,CAJA;MAAMI,O;AAMN,MAAMC,IAAI,GAAGnC,MAAM,CAAC8B,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;MAAMK,I;AAsBN,eAAe7B,WAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst CommentPost = (props) => {\n  const { user, content, createdAt } = props;\n  const dispatch = useDispatch();\n\n  // 댓글 id 가져오기\n  const comment_id = props._id;\n\n  // 로그인한 유저 정보 불러오기\n  const login_user = useSelector((state) => state.user);\n\n  const deleteComment = () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      dispatch(commentActions.deleteCommentDB(comment_id));\n      window.alert(\"삭제되었습니다!\");\n      // history.go(0); // 현재 페이지 새로고침\n    } else {\n      return;\n    }\n  };\n  return (\n    <React.Fragment>\n      <CommentPostWrap>\n        <Nickname>{user}</Nickname>\n        <Content>{content}</Content>\n        <Time>{moment(new Date(createdAt)).fromNow()}</Time>\n\n        {/* 로그인 유저의 이름과 작성자의 이름이 일치하면 댓글삭제버튼 보이게  */}\n        {login_user.user.name === user ? (\n          <div\n            style={{\n              display: \"flex\",\n              width: \"5rem\",\n              marginLeft: \"15px\",\n              alignItems: \"center\",\n            }}\n          >\n            <Button onClick={deleteComment}>삭제</Button>\n          </div>\n        ) : (\n          <></>\n        )}\n      </CommentPostWrap>\n    </React.Fragment>\n  );\n};\n\nCommentPost.defaultProps = {\n  user: \"댓글쓴이\",\n  content: \"댓글내용이에요!\",\n  createdAt: \"2021-04-13\",\n};\n\nconst CommentPostWrap = styled.div`\n  display: flex;\n  justify-content: \"space-between\";\n  margin-bottom: 1rem;\n  border-bottom: 1px solid #dddddd;\n  padding-bottom: 0.8rem;\n  @media all and (max-width: 1024px) {\n    font-size: 1rem;\n  }\n\n  @media all and (max-width: 768px) {\n    font-size: 0.8rem;\n  }\n  @media all and (max-width: 414px) {\n    font-size: 0.6rem;\n  }\n\n  @media all and (max-width: 375px) {\n    font-size: 0.6rem;\n  }\n`;\n\nconst Button = styled.button`\n  min-width: 2.6rem;\n  height: 30px;\n  margin: 0px auto;\n  color: gray;\n  border: none;\n  background-color: #ccd6f1;\n  border-radius: 10px;\n  font-weight: 700;\n  font-size: 0.9rem;\n  cursor: pointer;\n  :hover {\n    color: red;\n  }\n  @media all and (max-width: 414px) {\n    min-width: 1rem;\n    width: 2rem;\n    height: 1.8rem;\n    font-size: 0.5rem;\n  }\n  @media all and (max-width: 375px) {\n    min-width: 1rem;\n    width: 2rem;\n    height: 1.8rem;\n    font-size: 0.5rem;\n  }\n`;\n\nconst Nickname = styled.div`\n  min-width: 10rem;\n  width: auto;\n  margin-right: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  @media all and (max-width: 1024px) {\n    min-width: 3rem;\n    width: auto;\n  }\n  @media all and (max-width: 768px) {\n    min-width: 3rem;\n    width: auto;\n  }\n\n  @media all and (max-width: 414px) {\n    min-width: 2rem;\n    width: auto;\n  }\n  @media all and (max-width: 375px) {\n    min-width: 2rem;\n    width: auto;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n`;\n\nconst Time = styled.div`\n  width: 11rem;\n  align-items: center;\n  display: flex;\n  justify-content: flex-end;\n  color: #888686;\n  @media all and (max-width: 1024px) {\n    width: 9rem;\n  }\n\n  @media all and (max-width: 768px) {\n    width: 7rem;\n  }\n\n  @media all and (max-width: 414px) {\n    width: 6rem;\n  }\n  @media all and (max-width: 375px) {\n    width: 6rem;\n  }\n`;\n\nexport default CommentPost;\n"]},"metadata":{},"sourceType":"module"}