{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/HobbyGram-Front/src/shared/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\nimport Main from \"../pages/Main\";\nimport Header from \"../components/Header\";\nimport PostWrite from \"../pages/PostWrite\";\nimport PostEdit from \"../pages/PostEdit\";\nimport PostDetail from \"../pages/PostDetail\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\nimport { getCookie } from \"../shared/Cookie\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const cookie = getCookie(\"is_login\") ? true : false; // 쿠키가 있으면 새로고침 시 회원정보를 불러와 is_login = true를 유지 시켜준다.(로그인 후 날아가는 유저정보 유지장치)\n\n  React.useEffect(() => {\n    if (cookie) {\n      dispatch(userActions.getUserDB());\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConnectedRouter, {\n        history: history,\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/write\",\n          exact: true,\n          component: PostWrite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post/:id\",\n          exact: true,\n          component: PostDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post/:id/edit\",\n          exact: true,\n          component: PostEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          exact: true,\n          component: Signup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/HobbyGram-Front/src/shared/App.js"],"names":["React","Route","ConnectedRouter","history","Main","Header","PostWrite","PostEdit","PostDetail","Login","Signup","getCookie","useDispatch","actionCreators","userActions","App","dispatch","cookie","useEffect","getUserDB"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,MAAM,GAAGN,SAAS,CAAC,UAAD,CAAT,GAAwB,IAAxB,GAA+B,KAA9C,CAFa,CAIb;;AACAX,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,QAAID,MAAJ,EAAY;AACVD,MAAAA,QAAQ,CAACF,WAAW,CAACK,SAAZ,EAAD,CAAR;AACD;AACF,GAJD,EAIG,EAJH;AAMA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEhB,OAA1B;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,SAAS,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,MAA1B;AAA2B,UAAA,SAAS,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,KAAK,MAA7B;AAA8B,UAAA,SAAS,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,gBAAZ;AAA6B,UAAA,KAAK,MAAlC;AAAmC,UAAA,SAAS,EAAED;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,MAA1B;AAA2B,UAAA,SAAS,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,MAA3B;AAA4B,UAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA1BQK,G;UACUH,W;;;KADVG,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nimport { Route } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\n\nimport Main from \"../pages/Main\";\nimport Header from \"../components/Header\";\nimport PostWrite from \"../pages/PostWrite\";\nimport PostEdit from \"../pages/PostEdit\";\nimport PostDetail from \"../pages/PostDetail\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\n\nimport { getCookie } from \"../shared/Cookie\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const cookie = getCookie(\"is_login\") ? true : false;\n\n  // 쿠키가 있으면 새로고침 시 회원정보를 불러와 is_login = true를 유지 시켜준다.(로그인 후 날아가는 유저정보 유지장치)\n  React.useEffect(() => {\n    if (cookie) {\n      dispatch(userActions.getUserDB());\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"App\">\n        <Header />\n        <ConnectedRouter history={history}>\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/write\" exact component={PostWrite} />\n          <Route path=\"/post/:id\" exact component={PostDetail} />\n          <Route path=\"/post/:id/edit\" exact component={PostEdit} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/signup\" exact component={Signup} />\n        </ConnectedRouter>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}