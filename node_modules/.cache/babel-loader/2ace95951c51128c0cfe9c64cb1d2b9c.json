{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/HobbyGram-Front/src/pages/PostEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Input, Image } from \"../element/Index\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { history } from \"../redux/configureStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostEdit = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const post = useSelector(state => state.post.post);\n  const post_id = props.match.params.id; // 수정 시 현재 게시물의 content를 수정 인풋창에 띄워주기 위해 state의 default값을 post.content로 설정\n\n  const [contents, setContents] = React.useState(post.content);\n  const [title, setTitle] = React.useState(post.title);\n\n  const changeContents = e => {\n    setContents(e.target.value);\n  };\n\n  const changeTitle = e => {\n    setTitle(e.target.value);\n  }; // 수정 전 포스트 정보 가져오기\n\n\n  React.useEffect(() => {\n    dispatch(postActions.getOnePostDB(post_id));\n  }, []); // 수정하기\n\n  const editPost = () => {\n    dispatch(postActions.editPostDB(contents, title, post_id));\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uAC8C\\uC2DC\\uAE00 \\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TitleInput, {\n          value: title,\n          onChange: changeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          detail: true,\n          src: post.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          _onChange: changeContents,\n          multiline: true,\n          value: contents,\n          placeholder: \"\\uC218\\uC815\\uD560 \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        is_flex: true,\n        padding: \"30px 0px\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: editPost,\n          children: \"\\uC218\\uC815\\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            history.replace(`/post/${post_id}`);\n          },\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostEdit, \"bn7PqXEk/z4Df264QRI8N78IgR8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostEdit;\nPostEdit.defaultProps = {\n  title: \"제목이에요. 진짜로\",\n  img: \"\",\n  content: \"내용이 들어가요.\"\n};\nconst Button = styled.button`\n  width: 100px;\n  height: 35px;\n  margin: 0px;\n  border: 0px solid;\n  font: inherit;\n  background-color: #ccd6f1;\n  border-radius: 10px;\n  box-shadow: rgb(0 0 0 / 30%) 0px 1.5px 2.5px 0px;\n  @media (max-width: 1024px) {\n    width: 5rem;\n    font-size: 0.9rem;\n    height: 2rem;\n    margin: 0px 2.2rem;\n  }\n  @media (max-width: 768px) {\n    width: 4.5rem;\n    font-size: 0.8rem;\n    height: 1.9rem;\n    margin: 0px 2rem;\n  }\n\n  @media (max-width: 540px) {\n    width: 4.5rem;\n    font-size: 0.7rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n  @media (max-width: 414px) {\n    width: 4rem;\n    font-size: 0.6rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n\n  @media (max-width: 375px) {\n    width: 4rem;\n    font-size: 0.7rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n`;\n_c2 = Button;\nconst Wrapper = styled.div`\n  width: 70rem;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 6rem;\n  margin-bottom: 10rem;\n  padding: 100px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  background: white;\n  border-radius: 4px;\n  box-shadow: rgb(0 0 0 / 30%) 0px 4px 16px 0px;\n  border-radius: 10px;\n\n  @media (max-width: 1024px) {\n    width: 40rem;\n    margin-top: 2rem;\n  }\n  @media (max-width: 768px) {\n    width: 28rem;\n    margin-top: 2rem;\n  }\n  @media (max-width: 540px) {\n    width: 21rem;\n    margin-top: 1.5rem;\n    padding: 4rem;\n  }\n  @media (max-width: 414px) {\n    width: 16.5rem;\n    padding: 3rem;\n    margin-top: 1.5rem;\n  }\n  @media (max-width: 375px) {\n    width: 13rem;\n    padding: 3rem;\n    margin-top: 2rem;\n    & > h1 {\n      font-size: 2rem;\n    }\n  }\n  @media (max-width: 280px) {\n    width: 9.7rem;\n    padding: 3rem;\n    margin-top: 1rem;\n  }\n`;\n_c3 = Wrapper;\nconst TitleInput = styled.input`\n  width: 100%;\n  height: 40px;\n  font: inherit;\n  font-size: 1.3rem;\n  margin: 10px auto;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: solid 1px gray;\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n  @media (max-width: 414px) {\n    font-size: 1rem;\n    height: 1rem;\n    padding: 10px 10px;\n    width: 90%;\n  }\n\n  @media (max-width: 375px) {\n    font-size: 1rem;\n    height: 1rem;\n    padding: 10px 10px;\n    width: auto;\n  }\n`;\n_c4 = TitleInput;\nexport default PostEdit;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PostEdit\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"TitleInput\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/HobbyGram-Front/src/pages/PostEdit.js"],"names":["React","styled","useDispatch","useSelector","Grid","Input","Image","actionCreators","postActions","history","PostEdit","props","dispatch","post","state","post_id","match","params","id","contents","setContents","useState","content","title","setTitle","changeContents","e","target","value","changeTitle","useEffect","getOnePostDB","editPost","editPostDB","push","img","replace","defaultProps","Button","button","Wrapper","div","TitleInput","input"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzCA;MAAMD,M;AA2CN,MAAME,OAAO,GAAGvC,MAAM,CAACwC,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9CA;MAAMD,O;AAgDN,MAAME,UAAU,GAAGzC,MAAM,CAAC0C,KAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;MAAMD,U;AA4BN,eAAehC,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Input, Image } from \"../element/Index\";\n\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { history } from \"../redux/configureStore\";\n\nconst PostEdit = (props) => {\n  const dispatch = useDispatch();\n  const post = useSelector((state) => state.post.post);\n\n  const post_id = props.match.params.id;\n\n  // 수정 시 현재 게시물의 content를 수정 인풋창에 띄워주기 위해 state의 default값을 post.content로 설정\n  const [contents, setContents] = React.useState(post.content);\n  const [title, setTitle] = React.useState(post.title);\n\n  const changeContents = (e) => {\n    setContents(e.target.value);\n  };\n\n  const changeTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  // 수정 전 포스트 정보 가져오기\n  React.useEffect(() => {\n    dispatch(postActions.getOnePostDB(post_id));\n  }, []);\n\n  // 수정하기\n  const editPost = () => {\n    dispatch(postActions.editPostDB(contents, title, post_id));\n    history.push(\"/\");\n  };\n\n  return (\n    <React.Fragment>\n      <Wrapper>\n        <Grid>\n          <h3>게시글 수정</h3>\n          <TitleInput value={title} onChange={changeTitle}></TitleInput>\n        </Grid>\n        <Grid>\n          <Image detail src={post.img}></Image>\n        </Grid>\n        <Grid>\n          <Input\n            _onChange={changeContents}\n            multiline\n            value={contents}\n            placeholder=\"수정할 내용을 입력하세요.\"\n          />\n        </Grid>\n        <Grid is_flex padding=\"30px 0px\">\n          <Button onClick={editPost}>수정완료</Button>\n          <Button\n            onClick={() => {\n              history.replace(`/post/${post_id}`);\n            }}\n          >\n            취소\n          </Button>\n        </Grid>\n      </Wrapper>\n    </React.Fragment>\n  );\n};\n\nPostEdit.defaultProps = {\n  title: \"제목이에요. 진짜로\",\n  img: \"\",\n  content: \"내용이 들어가요.\",\n};\n\nconst Button = styled.button`\n  width: 100px;\n  height: 35px;\n  margin: 0px;\n  border: 0px solid;\n  font: inherit;\n  background-color: #ccd6f1;\n  border-radius: 10px;\n  box-shadow: rgb(0 0 0 / 30%) 0px 1.5px 2.5px 0px;\n  @media (max-width: 1024px) {\n    width: 5rem;\n    font-size: 0.9rem;\n    height: 2rem;\n    margin: 0px 2.2rem;\n  }\n  @media (max-width: 768px) {\n    width: 4.5rem;\n    font-size: 0.8rem;\n    height: 1.9rem;\n    margin: 0px 2rem;\n  }\n\n  @media (max-width: 540px) {\n    width: 4.5rem;\n    font-size: 0.7rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n  @media (max-width: 414px) {\n    width: 4rem;\n    font-size: 0.6rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n\n  @media (max-width: 375px) {\n    width: 4rem;\n    font-size: 0.7rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n`;\n\nconst Wrapper = styled.div`\n  width: 70rem;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 6rem;\n  margin-bottom: 10rem;\n  padding: 100px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  background: white;\n  border-radius: 4px;\n  box-shadow: rgb(0 0 0 / 30%) 0px 4px 16px 0px;\n  border-radius: 10px;\n\n  @media (max-width: 1024px) {\n    width: 40rem;\n    margin-top: 2rem;\n  }\n  @media (max-width: 768px) {\n    width: 28rem;\n    margin-top: 2rem;\n  }\n  @media (max-width: 540px) {\n    width: 21rem;\n    margin-top: 1.5rem;\n    padding: 4rem;\n  }\n  @media (max-width: 414px) {\n    width: 16.5rem;\n    padding: 3rem;\n    margin-top: 1.5rem;\n  }\n  @media (max-width: 375px) {\n    width: 13rem;\n    padding: 3rem;\n    margin-top: 2rem;\n    & > h1 {\n      font-size: 2rem;\n    }\n  }\n  @media (max-width: 280px) {\n    width: 9.7rem;\n    padding: 3rem;\n    margin-top: 1rem;\n  }\n`;\n\nconst TitleInput = styled.input`\n  width: 100%;\n  height: 40px;\n  font: inherit;\n  font-size: 1.3rem;\n  margin: 10px auto;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: solid 1px gray;\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n  @media (max-width: 414px) {\n    font-size: 1rem;\n    height: 1rem;\n    padding: 10px 10px;\n    width: 90%;\n  }\n\n  @media (max-width: 375px) {\n    font-size: 1rem;\n    height: 1rem;\n    padding: 10px 10px;\n    width: auto;\n  }\n`;\n\nexport default PostEdit;\n"]},"metadata":{},"sourceType":"module"}