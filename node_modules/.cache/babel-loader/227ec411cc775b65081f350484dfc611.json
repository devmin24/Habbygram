{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/HobbyGram-Front/src/pages/PostWrite.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Input, Upload, Image } from \"../element/Index\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { history } from \"../redux/configureStore\";\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\nimport preview_img from \"../image/no_image.png\";\nimport { titleCheck } from \"../shared/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostWrite = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [title, setTitle] = React.useState(\"\");\n  const [content, setContent] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"카테고리 선택\");\n  const [imgfile, setImgFile] = React.useState(null);\n  const [preview, setPreview] = React.useState(preview_img); // 로그인한 유저정보 불러오기\n\n  const user = useSelector(state => state.user);\n  const username = user.user.name;\n\n  const changeTitle = e => {\n    setTitle(e.target.value);\n  };\n\n  const changeContent = e => {\n    setContent(e.target.value);\n  }; // Material UI -- 함수 시작지점\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  }; // 카테고리 선택시 발생하는 이벤트 (드롭다운 close, 카테고리 값 변동)\n\n\n  const handleClose = e => {\n    setAnchorEl(null); // 드롭다운 활성화하고 선택안했을때 오류 방지\n\n    if (e.target.childNodes.length === 0) {\n      return;\n    }\n\n    setCategory(e.target.childNodes[0].textContent);\n  }; // Material UI --함수 끝\n\n\n  const addPost = () => {\n    // 아무내용 입력안하고 게시글 작성버튼 누를시\n    if (!title || !content || !category || !imgfile) {\n      window.alert(\"제목, 카테고리, 이미지, 내용은 필수 기입 항목입니다.\");\n      return;\n    } // 제목을 너무 길게 작성할 시 정규표현식으로 거르고 알림창생성\n\n\n    if (!titleCheck(title)) {\n      window.alert(\"제목을 20자 이내로 작성해주세요.\");\n      return;\n    }\n\n    dispatch(postActions.addPostDB(title, content, imgfile, category, username));\n    history.replace(\"/\");\n  }; // 미리보기 설정(이미지 url로 변환후 화면에 표시)\n\n\n  const selectFile = e => {\n    //file state에 현재 선택된 파일정보 저장\n    setImgFile(e.target.files[0]); // FileReader 내장함수 사용\n\n    const reader = new FileReader(); // 만약 파일이 선택되지 않았을 경우 그냥 반환한다.(오류방지)\n\n    if (!e.target.files[0]) {\n      return;\n    } // 현재 선택된 파일을 dataurl로 변환\n\n\n    reader.readAsDataURL(e.target.files[0]); // 변환된 dataurl을 preview state에 저장(미리보기화면에 표출)\n\n    reader.onload = () => {\n      setPreview(reader.result); // console.log(preview.length);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          _onChange: changeTitle,\n          bold: true,\n          placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"30px 0px 0px 0px\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            boxShadow: \"rgb(0 0 0 / 30%) 0px 1.5px 2.5px 0px\",\n            border: \"1px solid #dddddd\"\n          },\n          \"aria-controls\": \"simple-menu\",\n          \"aria-haspopup\": \"true\",\n          onClick: handleClick,\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"simple-menu\",\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleClose,\n            children: \"\\uC74C\\uC545\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleClose,\n            children: \"\\uC5EC\\uD589\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleClose,\n            children: \"\\uB9DB\\uC9D1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleClose,\n            children: \"\\uBC18\\uB824\\uB3D9\\uBB3C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"30px 0px\",\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          _onChange: selectFile,\n          children: \"\\uC0AC\\uC9C4\\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        detail: true,\n        src: preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: content,\n          _onChange: changeContent,\n          multiline: true,\n          placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        is_flex: true,\n        padding: \"30px 0px\",\n        children: [/*#__PURE__*/_jsxDEV(BasicButton, {\n          onClick: addPost,\n          children: \"\\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BasicButton, {\n          onClick: () => {\n            history.goBack();\n          },\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostWrite, \"u/TygNEHKhx+MSeeN4GNzUy7r3I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostWrite;\nconst BasicButton = styled.button`\n  width: 100px;\n  height: 35px;\n  margin: 0px;\n  font: inherit;\n  border: 0px solid;\n  background-color: #ccd6f1;\n  border-radius: 10px;\n  box-shadow: rgb(0 0 0 / 30%) 0px 1.5px 2.5px 0px;\n  :hover {\n    background-color: #bccdfb;\n  }\n  @media (max-width: 1024px) {\n    width: 5rem;\n    font-size: 0.9rem;\n    height: 2rem;\n    margin: 0px 2.2rem;\n  }\n  @media (max-width: 768px) {\n    width: 4.5rem;\n    font-size: 0.8rem;\n    height: 1.9rem;\n    margin: 0px 2rem;\n  }\n\n  @media (max-width: 540px) {\n    width: 4.5rem;\n    font-size: 0.7rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n  @media (max-width: 414px) {\n    width: 3rem;\n    font-size: 0.6rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n\n  @media (max-width: 375px) {\n    width: 3rem;\n    font-size: 0.7rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n`;\n_c2 = BasicButton;\nconst Wrapper = styled.div`\n  font: inherit;\n  width: 50rem;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 6rem;\n  margin-bottom: 10rem;\n  padding: 100px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  background: white;\n  border-radius: 4px;\n  box-shadow: rgb(0 0 0 / 30%) 0px 4px 16px 0px;\n  border-radius: 10px;\n  & > div > button {\n    font: inherit;\n    font-size: 1rem;\n  }\n\n  @media (max-width: 1024px) {\n    width: 40rem;\n    margin-top: 2rem;\n    & > div > button {\n      font: inherit;\n      font-size: 1rem;\n    }\n  }\n  @media (max-width: 768px) {\n    width: 28rem;\n    margin-top: 2rem;\n    & > div > button {\n      font: inherit;\n      font-size: 0.8rem;\n    }\n  }\n  @media (max-width: 540px) {\n    width: 21rem;\n    margin-top: 1.5rem;\n    padding: 4rem;\n    & > div > button {\n      font: inherit;\n      font-size: 0.8rem;\n    }\n  }\n  @media (max-width: 414px) {\n    width: 16.5rem;\n    padding: 3rem;\n    margin-top: 1.5rem;\n    & > div > button {\n      font: inherit;\n      font-size: 0.8rem;\n    }\n  }\n  @media (max-width: 375px) {\n    width: 13rem;\n    padding: 3rem;\n    margin-top: 2rem;\n    & > div > button {\n      font: inherit;\n      font-size: 0.7rem;\n    }\n  }\n  @media (max-width: 280px) {\n    width: 9.7rem;\n    padding: 3rem;\n    margin-top: 1rem;\n  }\n`;\n_c3 = Wrapper;\nexport default PostWrite;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PostWrite\");\n$RefreshReg$(_c2, \"BasicButton\");\n$RefreshReg$(_c3, \"Wrapper\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/HobbyGram-Front/src/pages/PostWrite.js"],"names":["React","styled","useDispatch","useSelector","Grid","Input","Upload","Image","actionCreators","postActions","history","Button","Menu","MenuItem","preview_img","titleCheck","PostWrite","props","dispatch","title","setTitle","useState","content","setContent","category","setCategory","imgfile","setImgFile","preview","setPreview","user","state","username","name","changeTitle","e","target","value","changeContent","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","childNodes","length","textContent","addPost","window","alert","addPostDB","replace","selectFile","files","reader","FileReader","readAsDataURL","onload","result","boxShadow","border","Boolean","goBack","BasicButton","button","Wrapper","div"],"mappings":"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S,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlCF,eAqCE,QAAC,KAAD;AAAO,QAAA,MAAM,MAAb;AAAc,QAAA,GAAG,EAAEzB;AAAnB;AAAA;AAAA;AAAA;AAAA,cArCF,eAsCE,QAAC,IAAD;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAEN,OADT;AAEE,UAAA,SAAS,EAAEgB,aAFb;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtCF,eA8CE,QAAC,IAAD;AAAM,QAAA,OAAO,MAAb;AAAc,QAAA,OAAO,EAAC,UAAtB;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEU,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACbtC,YAAAA,OAAO,CAACqD,MAAR;AACD,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CA5ID;;GAAM/C,S;UACad,W,EAQJC,W;;;KATTa,S;AA8IN,MAAMgD,WAAW,GAAG/D,MAAM,CAACgE,MAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5CA;MAAMD,W;AA8CN,MAAME,OAAO,GAAGjE,MAAM,CAACkE,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApEA;MAAMD,O;AAsEN,eAAelD,SAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Input, Upload, Image } from \"../element/Index\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { history } from \"../redux/configureStore\";\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\nimport preview_img from \"../image/no_image.png\";\nimport { titleCheck } from \"../shared/common\";\n\nconst PostWrite = (props) => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = React.useState(\"\");\n  const [content, setContent] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"카테고리 선택\");\n  const [imgfile, setImgFile] = React.useState(null);\n  const [preview, setPreview] = React.useState(preview_img);\n\n  // 로그인한 유저정보 불러오기\n  const user = useSelector((state) => state.user);\n  const username = user.user.name;\n\n  const changeTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const changeContent = (e) => {\n    setContent(e.target.value);\n  };\n\n  // Material UI -- 함수 시작지점\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  // 카테고리 선택시 발생하는 이벤트 (드롭다운 close, 카테고리 값 변동)\n  const handleClose = (e) => {\n    setAnchorEl(null);\n\n    // 드롭다운 활성화하고 선택안했을때 오류 방지\n    if (e.target.childNodes.length === 0) {\n      return;\n    }\n    setCategory(e.target.childNodes[0].textContent);\n  };\n  // Material UI --함수 끝\n\n  const addPost = () => {\n    // 아무내용 입력안하고 게시글 작성버튼 누를시\n    if (!title || !content || !category || !imgfile) {\n      window.alert(\"제목, 카테고리, 이미지, 내용은 필수 기입 항목입니다.\");\n      return;\n    }\n\n    // 제목을 너무 길게 작성할 시 정규표현식으로 거르고 알림창생성\n    if (!titleCheck(title)) {\n      window.alert(\"제목을 20자 이내로 작성해주세요.\");\n      return;\n    }\n\n    dispatch(\n      postActions.addPostDB(title, content, imgfile, category, username)\n    );\n    history.replace(\"/\");\n  };\n\n  // 미리보기 설정(이미지 url로 변환후 화면에 표시)\n  const selectFile = (e) => {\n    //file state에 현재 선택된 파일정보 저장\n    setImgFile(e.target.files[0]);\n\n    // FileReader 내장함수 사용\n    const reader = new FileReader();\n\n    // 만약 파일이 선택되지 않았을 경우 그냥 반환한다.(오류방지)\n    if (!e.target.files[0]) {\n      return;\n    }\n\n    // 현재 선택된 파일을 dataurl로 변환\n    reader.readAsDataURL(e.target.files[0]);\n\n    // 변환된 dataurl을 preview state에 저장(미리보기화면에 표출)\n    reader.onload = () => {\n      setPreview(reader.result);\n      // console.log(preview.length);\n    };\n  };\n\n  return (\n    <React.Fragment>\n      <Wrapper>\n        <Grid>\n          <Input\n            _onChange={changeTitle}\n            bold\n            placeholder=\"제목을 입력하세요.\"\n          />\n        </Grid>\n        <Grid padding=\"30px 0px 0px 0px\">\n          <Button\n            style={{\n              boxShadow: \"rgb(0 0 0 / 30%) 0px 1.5px 2.5px 0px\",\n              border: \"1px solid #dddddd\",\n            }}\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n          >\n            {category}\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleClose}>음악</MenuItem>\n            <MenuItem onClick={handleClose}>여행</MenuItem>\n            <MenuItem onClick={handleClose}>맛집</MenuItem>\n            <MenuItem onClick={handleClose}>반려동물</MenuItem>\n          </Menu>\n        </Grid>\n\n        <Grid padding=\"30px 0px\">\n          <Upload _onChange={selectFile}>사진선택</Upload>\n        </Grid>\n        <Image detail src={preview}></Image>\n        <Grid>\n          <Input\n            value={content}\n            _onChange={changeContent}\n            multiline\n            placeholder=\"내용을 입력하세요.\"\n          />\n        </Grid>\n        <Grid is_flex padding=\"30px 0px\">\n          <BasicButton onClick={addPost}>완료</BasicButton>\n          <BasicButton\n            onClick={() => {\n              history.goBack();\n            }}\n          >\n            취소\n          </BasicButton>\n        </Grid>\n      </Wrapper>\n    </React.Fragment>\n  );\n};\n\nconst BasicButton = styled.button`\n  width: 100px;\n  height: 35px;\n  margin: 0px;\n  font: inherit;\n  border: 0px solid;\n  background-color: #ccd6f1;\n  border-radius: 10px;\n  box-shadow: rgb(0 0 0 / 30%) 0px 1.5px 2.5px 0px;\n  :hover {\n    background-color: #bccdfb;\n  }\n  @media (max-width: 1024px) {\n    width: 5rem;\n    font-size: 0.9rem;\n    height: 2rem;\n    margin: 0px 2.2rem;\n  }\n  @media (max-width: 768px) {\n    width: 4.5rem;\n    font-size: 0.8rem;\n    height: 1.9rem;\n    margin: 0px 2rem;\n  }\n\n  @media (max-width: 540px) {\n    width: 4.5rem;\n    font-size: 0.7rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n  @media (max-width: 414px) {\n    width: 3rem;\n    font-size: 0.6rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n\n  @media (max-width: 375px) {\n    width: 3rem;\n    font-size: 0.7rem;\n    height: 1.7rem;\n    margin: 0px 1.5rem;\n  }\n`;\n\nconst Wrapper = styled.div`\n  font: inherit;\n  width: 50rem;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 6rem;\n  margin-bottom: 10rem;\n  padding: 100px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  background: white;\n  border-radius: 4px;\n  box-shadow: rgb(0 0 0 / 30%) 0px 4px 16px 0px;\n  border-radius: 10px;\n  & > div > button {\n    font: inherit;\n    font-size: 1rem;\n  }\n\n  @media (max-width: 1024px) {\n    width: 40rem;\n    margin-top: 2rem;\n    & > div > button {\n      font: inherit;\n      font-size: 1rem;\n    }\n  }\n  @media (max-width: 768px) {\n    width: 28rem;\n    margin-top: 2rem;\n    & > div > button {\n      font: inherit;\n      font-size: 0.8rem;\n    }\n  }\n  @media (max-width: 540px) {\n    width: 21rem;\n    margin-top: 1.5rem;\n    padding: 4rem;\n    & > div > button {\n      font: inherit;\n      font-size: 0.8rem;\n    }\n  }\n  @media (max-width: 414px) {\n    width: 16.5rem;\n    padding: 3rem;\n    margin-top: 1.5rem;\n    & > div > button {\n      font: inherit;\n      font-size: 0.8rem;\n    }\n  }\n  @media (max-width: 375px) {\n    width: 13rem;\n    padding: 3rem;\n    margin-top: 2rem;\n    & > div > button {\n      font: inherit;\n      font-size: 0.7rem;\n    }\n  }\n  @media (max-width: 280px) {\n    width: 9.7rem;\n    padding: 3rem;\n    margin-top: 1rem;\n  }\n`;\n\nexport default PostWrite;\n"]},"metadata":{},"sourceType":"module"}