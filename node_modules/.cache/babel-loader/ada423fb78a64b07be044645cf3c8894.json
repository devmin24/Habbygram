{"ast":null,"code":"var _jsxFileName = \"/Users/parkminkyung/Desktop/git/HobbyGram-Front/src/components/category.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport icon from \"../shared/icon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [text, setText] = useState(\"\"); // 버튼 클릭 시 카테고리 값을 text로 보내서 해당된 게시글만 불러오기.\n\n  React.useEffect(() => {\n    dispatch(postActions.setPostDB(text));\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrap, {\n      children: /*#__PURE__*/_jsxDEV(Div, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"2.5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonBox, {\n          onClick: () => {\n            setText(\"음악\");\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            children: \"\\uC74C\\uC545\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonBox, {\n          onClick: () => {\n            setText(\"여행\");\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            children: \"\\uC5EC\\uD589\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonBox, {\n          onClick: () => {\n            setText(\"맛집\");\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            children: \"\\uB9DB\\uC9D1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonBox, {\n          onClick: () => {\n            setText(\"반려동물\");\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            children: \"\\uBC18\\uB824\\uB3D9\\uBB3C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"HegJdYc0hJn0T5Xaj0fbN9QEwok=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Category;\nexport default Category;\nconst Wrap = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin: 15px auto 0px auto;\n  margin-bottom: 30px;\n  box-sizing: border-box;\n`;\n_c2 = Wrap;\nconst Div = styled.div`\n  width: 100vw;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  @media (max-width: 1024px) {\n    width: 80%;\n    height: auto;\n    justify-content: center;\n  }\n\n  @media (max-width: 767px) {\n    width: 100%;\n    height: auto;\n    justify-content: center;\n  }\n`;\n_c3 = Div;\nconst ButtonBox = styled.div`\n  flex-direction: column;\n  text-align: center;\n  width: 9rem;\n  height: 9rem;\n  display: flex;\n  font: inherit;\n  font-weight: 800;\n  font-size: 17px;\n  margin: 0px 3rem;\n\n  :hover {\n    transition: all 0.3s;\n    font-weight: bold;\n    transform: translateY(-4px);\n  }\n\n  @media (max-width: 1024px) {\n    width: 9rem;\n    height: auto;\n    justify-content: center;\n    margin: 0px;\n    & div {\n      width: 9rem;\n      height: 9rem;\n      font-size: 15px;\n    }\n  }\n\n  @media (max-width: 767px) {\n    width: 6.5rem;\n    height: auto;\n    justify-content: center;\n    margin: 0px;\n    & div {\n      width: 6.5rem;\n      height: 6.5rem;\n      font-size: 15px;\n    }\n  }\n  @media (max-width: 414px) {\n    width: 4.7rem;\n    height: auto;\n    justify-content: center;\n    margin: 0px;\n    & div {\n      width: 5rem;\n      height: 5rem;\n      font-size: 12px;\n    }\n  }\n\n  @media (max-width: 375px) {\n    width: 5rem;\n    height: auto;\n    justify-content: center;\n    margin: 0px;\n    & div {\n      width: 5rem;\n      height: 5rem;\n      font-size: 12px;\n    }\n  }\n\n  @media (max-width: 280px) {\n    width: 6rem;\n    height: auto;\n    justify-content: center;\n    margin: 0px;\n    & div {\n      width: 5.5rem;\n      height: 5.5rem;\n      font-size: 12px;\n    }\n  }\n`;\n_c4 = ButtonBox;\nconst Icon = styled.div`\n  display: flex;\n  width: 9rem;\n  height: 9rem;\n  background-size: cover;\n  background-image: url(\"${icon}\");\n  align-items: flex-end;\n  justify-content: center;\n`;\n_c5 = Icon;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"Wrap\");\n$RefreshReg$(_c3, \"Div\");\n$RefreshReg$(_c4, \"ButtonBox\");\n$RefreshReg$(_c5, \"Icon\");","map":{"version":3,"sources":["/Users/parkminkyung/Desktop/git/HobbyGram-Front/src/components/category.js"],"names":["React","useState","useDispatch","styled","actionCreators","postActions","icon","Category","dispatch","text","setText","useEffect","setPostDB","marginBottom","Wrap","div","Div","ButtonBox","Icon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC,CAFqB,CAIrB;;AACAD,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpBH,IAAAA,QAAQ,CAACH,WAAW,CAACO,SAAZ,CAAsBH,IAAtB,CAAD,CAAR;AACD,GAFD,EAEG,CAACA,IAAD,CAFH;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE,QAAC,GAAD;AAAA,gCACE;AAAK,UAAA,KAAK,EAAE;AAAEI,YAAAA,YAAY,EAAE;AAAhB;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACbH,YAAAA,OAAO,CAAC,IAAD,CAAP;AACD,WAHH;AAAA,iCAKE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE,QAAC,SAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACbA,YAAAA,OAAO,CAAC,IAAD,CAAP;AACD,WAHH;AAAA,iCAKE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBATF,eAgBE,QAAC,SAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACbA,YAAAA,OAAO,CAAC,IAAD,CAAP;AACD,WAHH;AAAA,iCAKE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAuBE,QAAC,SAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACbA,YAAAA,OAAO,CAAC,MAAD,CAAP;AACD,WAHH;AAAA,iCAKE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CA9CD;;GAAMH,Q;UACaL,W;;;KADbK,Q;AAgDN,eAAeA,QAAf;AAEA,MAAMO,IAAI,GAAGX,MAAM,CAACY,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,I;AAUN,MAAME,GAAG,GAAGb,MAAM,CAACY,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMC,G;AAiBN,MAAMC,SAAS,GAAGd,MAAM,CAACY,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3EA;MAAME,S;AA4EN,MAAMC,IAAI,GAAGf,MAAM,CAACY,GAAI;AACxB;AACA;AACA;AACA;AACA,2BAA2BT,IAAK;AAChC;AACA;AACA,CARA;MAAMY,I","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\n\nimport icon from \"../shared/icon.png\";\n\nconst Category = () => {\n  const dispatch = useDispatch();\n  const [text, setText] = useState(\"\");\n\n  // 버튼 클릭 시 카테고리 값을 text로 보내서 해당된 게시글만 불러오기.\n  React.useEffect(() => {\n    dispatch(postActions.setPostDB(text));\n  }, [text]);\n\n  return (\n    <React.Fragment>\n      <Wrap>\n        <Div>\n          <div style={{ marginBottom: \"2.5rem\" }}></div>\n          <ButtonBox\n            onClick={() => {\n              setText(\"음악\");\n            }}\n          >\n            <Icon>음악</Icon>\n          </ButtonBox>\n          <ButtonBox\n            onClick={() => {\n              setText(\"여행\");\n            }}\n          >\n            <Icon>여행</Icon>\n          </ButtonBox>\n          <ButtonBox\n            onClick={() => {\n              setText(\"맛집\");\n            }}\n          >\n            <Icon>맛집</Icon>\n          </ButtonBox>\n          <ButtonBox\n            onClick={() => {\n              setText(\"반려동물\");\n            }}\n          >\n            <Icon>반려동물</Icon>\n          </ButtonBox>\n        </Div>\n      </Wrap>\n    </React.Fragment>\n  );\n};\n\nexport default Category;\n\nconst Wrap = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin: 15px auto 0px auto;\n  margin-bottom: 30px;\n  box-sizing: border-box;\n`;\n\nconst Div = styled.div`\n  width: 100vw;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  @media (max-width: 1024px) {\n    width: 80%;\n    height: auto;\n    justify-content: center;\n  }\n\n  @media (max-width: 767px) {\n    width: 100%;\n    height: auto;\n    justify-content: center;\n  }\n`;\nconst ButtonBox = styled.div`\n  flex-direction: column;\n  text-align: center;\n  width: 9rem;\n  height: 9rem;\n  display: flex;\n  font: inherit;\n  font-weight: 800;\n  font-size: 17px;\n  margin: 0px 3rem;\n\n  :hover {\n    transition: all 0.3s;\n    font-weight: bold;\n    transform: translateY(-4px);\n  }\n\n  @media (max-width: 1024px) {\n    width: 9rem;\n    height: auto;\n    justify-content: center;\n    margin: 0px;\n    & div {\n      width: 9rem;\n      height: 9rem;\n      font-size: 15px;\n    }\n  }\n\n  @media (max-width: 767px) {\n    width: 6.5rem;\n    height: auto;\n    justify-content: center;\n    margin: 0px;\n    & div {\n      width: 6.5rem;\n      height: 6.5rem;\n      font-size: 15px;\n    }\n  }\n  @media (max-width: 414px) {\n    width: 4.7rem;\n    height: auto;\n    justify-content: center;\n    margin: 0px;\n    & div {\n      width: 5rem;\n      height: 5rem;\n      font-size: 12px;\n    }\n  }\n\n  @media (max-width: 375px) {\n    width: 5rem;\n    height: auto;\n    justify-content: center;\n    margin: 0px;\n    & div {\n      width: 5rem;\n      height: 5rem;\n      font-size: 12px;\n    }\n  }\n\n  @media (max-width: 280px) {\n    width: 6rem;\n    height: auto;\n    justify-content: center;\n    margin: 0px;\n    & div {\n      width: 5.5rem;\n      height: 5.5rem;\n      font-size: 12px;\n    }\n  }\n`;\nconst Icon = styled.div`\n  display: flex;\n  width: 9rem;\n  height: 9rem;\n  background-size: cover;\n  background-image: url(\"${icon}\");\n  align-items: flex-end;\n  justify-content: center;\n`;\n"]},"metadata":{},"sourceType":"module"}